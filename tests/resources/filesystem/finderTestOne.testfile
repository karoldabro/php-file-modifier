<?php

class FooClass
{
    /**
     * Some comment
     *
     * @var string
     */
    private $someProperty;

    public function __construct(string $someProperty)
    {
        $this->someProperty = $someProperty;
    }

    /**
     * Some comment
     *
     * @return void
     */
    public function method1()
    {
        $resource = $this->getSomeProperty();
        $resource->open($this->host, $this->port);
        $resource->write('some data');

        $response = '';
        while (($line = $resource->getLine()) !== false) {
            $response .= $line;
        }

        $resource->close();

        return $response;
    }

    // This could be refactored to constructor injection
    // but for simplicity example we will leave at this
    public function getSomeProperty()
    {
        return $this->someProperty;
    }

    public function method2() {
        return $this->someProperty;
    }


    private function method3() { return $this->someProperty; }


    protected function method4() 
    {
        if () {
            if () {
                if () {
                    while() {

                    }
                }
            }
        }
    }

    private function many_brances_in_one_line() { 
        if (1 === $some) { while($some) {echo $elese;}
        }
        echo 'end';
     }

     private $property1 = null;

     public $property2 = 2;

     public $property3 = function ($smth) {

     };

     public $property4 = [
         'test' => 'test',
     ];

     public $property5 = 
     '
     test
     ';

     public $property6 = function ($smth) {
        echo 'test';
    };

    public $property7 = function ($smth) {
        if ($smth) {
            echo 'test';
        } else {
            echo 'test2';
        }
    };

    public $property8 = 
    [
        'test' => 'test',
    ];

    public $property9 = 
    [
        'test' => function ($smth) {
            if ($smth) {
                echo 'test';
            } else {
                echo 'test2';
            }
        },
        'test2' => [
            1 => ($mnth ? 'tese' : 1),
        ]
    ];

}